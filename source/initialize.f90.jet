module initialize

!-----------------------------------------------------------------
!   This module sets the initial conditions of the model and
!   and sets the values of the eta levels.
!-----------------------------------------------------------------

use kinds
use model_parameters
use physical_parameters
use prognostics
use step

implicit none
save


contains


!===================================================================
! BEGINNING OF INITIALIZE_MODEL
!===================================================================

subroutine initialize_model(step_count,tau_initial)

implicit none

!-------------------------------------------------------------------
! INTENT IN 
!-------------------------------------------------------------------
integer (kind = int_kind), intent(in) :: step_count

!-------------------------------------------------------------------
! INTENT INOUT
!-------------------------------------------------------------------
real (kind = dbl_kind), intent(inout) :: tau_initial

!-------------------------------------------------------------------
! LOCAL
!-------------------------------------------------------------------
integer :: i, j

real (kind = dbl_kind) :: rnd   ! random number

logical, parameter :: init_from_ic_prog_file = .false.
logical, parameter :: init_from_bc_surf_file = .false.

real (kind=dbl_kind), parameter :: U0 = 50._dbl_kind  ! Jet max (m s-1)



call init_prognostics





! Initialize prognostic and tendency time step indices
n4 = mod(step_count+1,2) + 1
n3 = mod(step_count,2) + 1
n3_f = mod(step_count+2,3) + 1
n2_f = mod(step_count+1,3) + 1
n1_f = mod(step_count,3) + 1


! Initialize Coriolis parameter
f_cor(:) = 0._dbl_kind


!
! Set boundary conditions (i.e., bottom topography)
!
if ( init_from_bc_surf_file ) then

   print *
   print *, "Setting topography from bc_surf file"
   print *

   ! Read lower boundary info. (i.e. surface height)
   open (unit = 21, file = "./data/bc_surf", action = "read", form = "unformatted")

   do j = 1,jm
      read (21) (hs(i,j), i = 1,im)
   end do

   close (21)

else

   print *
   print *, "Setting topography within model"
   print *

   hs(:,:) = c0

end if


!
! Set initial conditions
!
if ( init_from_ic_prog_file ) then

   print *
   print *, "Initializing prognostic variables from ic_prog file"
   print *

   open (unit = 20, file = "./data/ic_prog", action = "read", form = "unformatted")


   ! Read in initial value of time (tau)
   read (20) tau_initial


   ! Read initial conditions prognostic variables
   do j = 1,jm
      read (20) (u(i,j,n4),  i = 1,im)
      read (20) (v(i,j,n4),  i = 1,im)
      read (20) (h_star(i,j,n4),  i = 1,im)
   end do

   close (20)

else

   print *
   print *, "Initializing prognostic variables within model"
   print *

   tau_initial = c0

   do j = 1, jm
      u(:,j,n4) = -U0*cos(2*pi*(j-1)/jm)
   end do

   v(:,:,n4) = c0

   h(:,:) = 1._dbl_kind    !  8100._dbl_kind

   ! Add a little perturbation
   ! h(:,7) = h(:,7) - 0.5_dbl_kind
   ! h(:,jm-8) = h(:,jm-8) + 1._dbl_kind

   ! u(:,4,n4) = u(:,4,n4) + 1._dbl_kind
   ! u(:,jm-4,n4) = u(:,jm-4,n4) - 0.5_dbl_kind

   do j = 1, jm
      call RANDOM_NUMBER(rnd)
      ! h(:,j) = h(:,j) + (2*rnd-c1)*0.6_dbl_kind
      call RANDOM_NUMBER(rnd)
      ! u(:,j,n4) = u(:,j,n4) + (2*rnd-c1)*0.0055_dbl_kind
   end do

   ! h(:,1) = 8420._dbl_kind
   ! do j = 2, jm
   !    h(:,j) = h(:,j-1) - (invgrav*f_cor(j))*                        &
   !                p5*(u(:,jm1(j),n4)+u(:,j,n4))*dy
   ! end do

   h_star(:,:,n4) = h(:,:) - hs(:,:)

end if





! Set horizontal grid point "+1/-1" indices
do i = 1,im
   ip1(i) = mod(i+im,im) + 1
   im1(i) = mod(i+im-2,im) + 1
   ip2(i) = mod(i+im+1,im) + 1
   im2(i) = mod(i+im-3,im) + 1
end do
do j = 1,jm
   jp1(j) = mod(j+jm,jm) + 1
   jm1(j) = mod(j+jm-2,jm) + 1
   jp2(j) = mod(j+jm+1,jm) + 1
   jm2(j) = mod(j+jm-3,jm) + 1
end do


end subroutine initialize_model

!===================================================================
! END OF INITIALIZE_MODEL
!===================================================================


end module initialize
